--lpm_mult CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEDICATED_MULTIPLIER_CIRCUITRY="NO" DEVICE_FAMILY="Cyclone II" DSP_BLOCK_BALANCING="Auto" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=10 LPM_WIDTHB=10 LPM_WIDTHP=20 MAXIMIZE_SPEED=9 clken clock dataa datab result CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_mult 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_padd 2013:06:12:18:03:43:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION carry_sum (cin, sin)
RETURNS ( cout, sout);
FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = lut 94 reg 72 
OPTIONS ALTERA_INTERNAL_OPTION = "{-to dffe10} POWER_UP_LEVEL=LOW;{-to dffe11} POWER_UP_LEVEL=LOW;{-to dffe12} POWER_UP_LEVEL=LOW;{-to dffe13} POWER_UP_LEVEL=LOW;{-to dffe14} POWER_UP_LEVEL=LOW;{-to dffe15} POWER_UP_LEVEL=LOW;{-to dffe16} POWER_UP_LEVEL=LOW;{-to dffe17} POWER_UP_LEVEL=LOW;{-to dffe18} POWER_UP_LEVEL=LOW;{-to dffe19} POWER_UP_LEVEL=LOW;{-to dffe20} POWER_UP_LEVEL=LOW;{-to dffe21} POWER_UP_LEVEL=LOW;{-to dffe22} POWER_UP_LEVEL=LOW;{-to dffe23} POWER_UP_LEVEL=LOW;{-to dffe24} POWER_UP_LEVEL=LOW;{-to dffe25} POWER_UP_LEVEL=LOW;{-to dffe26} POWER_UP_LEVEL=LOW;{-to dffe27} POWER_UP_LEVEL=LOW;{-to dffe28} POWER_UP_LEVEL=LOW;{-to dffe29} POWER_UP_LEVEL=LOW;{-to dffe3} POWER_UP_LEVEL=LOW;{-to dffe30} POWER_UP_LEVEL=LOW;{-to dffe31} POWER_UP_LEVEL=LOW;{-to dffe32} POWER_UP_LEVEL=LOW;{-to dffe33} POWER_UP_LEVEL=LOW;{-to dffe34} POWER_UP_LEVEL=LOW;{-to dffe35} POWER_UP_LEVEL=LOW;{-to dffe36} POWER_UP_LEVEL=LOW;{-to dffe37} POWER_UP_LEVEL=LOW;{-to dffe38} POWER_UP_LEVEL=LOW;{-to dffe39} POWER_UP_LEVEL=LOW;{-to dffe4} POWER_UP_LEVEL=LOW;{-to dffe40} POWER_UP_LEVEL=LOW;{-to dffe41} POWER_UP_LEVEL=LOW;{-to dffe42} POWER_UP_LEVEL=LOW;{-to dffe43} POWER_UP_LEVEL=LOW;{-to dffe44} POWER_UP_LEVEL=LOW;{-to dffe45} POWER_UP_LEVEL=LOW;{-to dffe46} POWER_UP_LEVEL=LOW;{-to dffe47} POWER_UP_LEVEL=LOW;{-to dffe48} POWER_UP_LEVEL=LOW;{-to dffe49} POWER_UP_LEVEL=LOW;{-to dffe5} POWER_UP_LEVEL=LOW;{-to dffe50} POWER_UP_LEVEL=LOW;{-to dffe51} POWER_UP_LEVEL=LOW;{-to dffe52} POWER_UP_LEVEL=LOW;{-to dffe53} POWER_UP_LEVEL=LOW;{-to dffe54} POWER_UP_LEVEL=LOW;{-to dffe55} POWER_UP_LEVEL=LOW;{-to dffe56} POWER_UP_LEVEL=LOW;{-to dffe57} POWER_UP_LEVEL=LOW;{-to dffe58} POWER_UP_LEVEL=LOW";
OPTIONS ALTERA_INTERNAL_OPTION = "{-to dffe59} POWER_UP_LEVEL=LOW;{-to dffe6} POWER_UP_LEVEL=LOW;{-to dffe60} POWER_UP_LEVEL=LOW;{-to dffe61} POWER_UP_LEVEL=LOW;{-to dffe62} POWER_UP_LEVEL=LOW;{-to dffe63} POWER_UP_LEVEL=LOW;{-to dffe64} POWER_UP_LEVEL=LOW;{-to dffe65} POWER_UP_LEVEL=LOW;{-to dffe66} POWER_UP_LEVEL=LOW;{-to dffe67} POWER_UP_LEVEL=LOW;{-to dffe68} POWER_UP_LEVEL=LOW;{-to dffe69} POWER_UP_LEVEL=LOW;{-to dffe7} POWER_UP_LEVEL=LOW;{-to dffe70} POWER_UP_LEVEL=LOW;{-to dffe71} POWER_UP_LEVEL=LOW;{-to dffe72} POWER_UP_LEVEL=LOW;{-to dffe73} POWER_UP_LEVEL=LOW;{-to dffe74} POWER_UP_LEVEL=LOW;{-to dffe8} POWER_UP_LEVEL=LOW;{-to dffe9} POWER_UP_LEVEL=LOW";

SUBDESIGN mult_o9t
( 
	clken	:	input;
	clock	:	input;
	dataa[9..0]	:	input;
	datab[9..0]	:	input;
	result[19..0]	:	output;
) 
VARIABLE
	add75_result[22..0]	:	WIRE;
	add79_result[19..0]	:	WIRE;
	add83_result[16..0]	:	WIRE;
	add87_result[11..0]	:	WIRE;
	add91_result[6..0]	:	WIRE;
	add95_result[2..0]	:	WIRE;
	cs1a[5..0] : carry_sum;
	cs2a[5..0] : carry_sum;
	dffe10 : dffe
		WITH (
			power_up = "low"
		);
	dffe11 : dffe
		WITH (
			power_up = "low"
		);
	dffe12 : dffe
		WITH (
			power_up = "low"
		);
	dffe13 : dffe
		WITH (
			power_up = "low"
		);
	dffe14 : dffe
		WITH (
			power_up = "low"
		);
	dffe15 : dffe
		WITH (
			power_up = "low"
		);
	dffe16 : dffe
		WITH (
			power_up = "low"
		);
	dffe17 : dffe
		WITH (
			power_up = "low"
		);
	dffe18 : dffe
		WITH (
			power_up = "low"
		);
	dffe19 : dffe
		WITH (
			power_up = "low"
		);
	dffe20 : dffe
		WITH (
			power_up = "low"
		);
	dffe21 : dffe
		WITH (
			power_up = "low"
		);
	dffe22 : dffe
		WITH (
			power_up = "low"
		);
	dffe23 : dffe
		WITH (
			power_up = "low"
		);
	dffe24 : dffe
		WITH (
			power_up = "low"
		);
	dffe25 : dffe
		WITH (
			power_up = "low"
		);
	dffe26 : dffe
		WITH (
			power_up = "low"
		);
	dffe27 : dffe
		WITH (
			power_up = "low"
		);
	dffe28 : dffe
		WITH (
			power_up = "low"
		);
	dffe29 : dffe
		WITH (
			power_up = "low"
		);
	dffe3 : dffe
		WITH (
			power_up = "low"
		);
	dffe30 : dffe
		WITH (
			power_up = "low"
		);
	dffe31 : dffe
		WITH (
			power_up = "low"
		);
	dffe32 : dffe
		WITH (
			power_up = "low"
		);
	dffe33 : dffe
		WITH (
			power_up = "low"
		);
	dffe34 : dffe
		WITH (
			power_up = "low"
		);
	dffe35 : dffe
		WITH (
			power_up = "low"
		);
	dffe36 : dffe
		WITH (
			power_up = "low"
		);
	dffe37 : dffe
		WITH (
			power_up = "low"
		);
	dffe38 : dffe
		WITH (
			power_up = "low"
		);
	dffe39 : dffe
		WITH (
			power_up = "low"
		);
	dffe4 : dffe
		WITH (
			power_up = "low"
		);
	dffe40 : dffe
		WITH (
			power_up = "low"
		);
	dffe41 : dffe
		WITH (
			power_up = "low"
		);
	dffe42 : dffe
		WITH (
			power_up = "low"
		);
	dffe43 : dffe
		WITH (
			power_up = "low"
		);
	dffe44 : dffe
		WITH (
			power_up = "low"
		);
	dffe45 : dffe
		WITH (
			power_up = "low"
		);
	dffe46 : dffe
		WITH (
			power_up = "low"
		);
	dffe47 : dffe
		WITH (
			power_up = "low"
		);
	dffe48 : dffe
		WITH (
			power_up = "low"
		);
	dffe49 : dffe
		WITH (
			power_up = "low"
		);
	dffe5 : dffe
		WITH (
			power_up = "low"
		);
	dffe50 : dffe
		WITH (
			power_up = "low"
		);
	dffe51 : dffe
		WITH (
			power_up = "low"
		);
	dffe52 : dffe
		WITH (
			power_up = "low"
		);
	dffe53 : dffe
		WITH (
			power_up = "low"
		);
	dffe54 : dffe
		WITH (
			power_up = "low"
		);
	dffe55 : dffe
		WITH (
			power_up = "low"
		);
	dffe56 : dffe
		WITH (
			power_up = "low"
		);
	dffe57 : dffe
		WITH (
			power_up = "low"
		);
	dffe58 : dffe
		WITH (
			power_up = "low"
		);
	dffe59 : dffe
		WITH (
			power_up = "low"
		);
	dffe6 : dffe
		WITH (
			power_up = "low"
		);
	dffe60 : dffe
		WITH (
			power_up = "low"
		);
	dffe61 : dffe
		WITH (
			power_up = "low"
		);
	dffe62 : dffe
		WITH (
			power_up = "low"
		);
	dffe63 : dffe
		WITH (
			power_up = "low"
		);
	dffe64 : dffe
		WITH (
			power_up = "low"
		);
	dffe65 : dffe
		WITH (
			power_up = "low"
		);
	dffe66 : dffe
		WITH (
			power_up = "low"
		);
	dffe67 : dffe
		WITH (
			power_up = "low"
		);
	dffe68 : dffe
		WITH (
			power_up = "low"
		);
	dffe69 : dffe
		WITH (
			power_up = "low"
		);
	dffe7 : dffe
		WITH (
			power_up = "low"
		);
	dffe70 : dffe
		WITH (
			power_up = "low"
		);
	dffe71 : dffe
		WITH (
			power_up = "low"
		);
	dffe72 : dffe
		WITH (
			power_up = "low"
		);
	dffe73 : dffe
		WITH (
			power_up = "low"
		);
	dffe74 : dffe
		WITH (
			power_up = "low"
		);
	dffe8 : dffe
		WITH (
			power_up = "low"
		);
	dffe9 : dffe
		WITH (
			power_up = "low"
		);
	sft76a[22..0] : soft;
	sft77a[22..0] : soft;
	sft78a[22..0] : soft;
	sft80a[19..0] : soft;
	sft81a[19..0] : soft;
	sft82a[19..0] : soft;
	sft84a[16..0] : soft;
	sft85a[16..0] : soft;
	sft86a[16..0] : soft;
	sft88a[11..0] : soft;
	sft89a[11..0] : soft;
	sft90a[11..0] : soft;
	sft92a[6..0] : soft;
	sft93a[6..0] : soft;
	sft94a[6..0] : soft;
	sft96a[2..0] : soft;
	sft97a[2..0] : soft;
	sft98a[2..0] : soft;
	aclr	: NODE;
	dataa_node[9..0]	: WIRE;
	datab_node[9..0]	: WIRE;
	final_result_node[19..0]	: WIRE;
	w129w[11..0]	: WIRE;
	w188w[11..0]	: WIRE;
	w238w[11..0]	: WIRE;
	w296w[11..0]	: WIRE;
	w354w[11..0]	: WIRE;
	w394w[10..0]	: WIRE;
	w427w	: WIRE;
	w456w	: WIRE;
	w693w[22..0]	: WIRE;
	w7w[11..0]	: WIRE;

BEGIN 
	add75_result[] = sft76a[].out + sft77a[].out;
	add79_result[] = sft80a[].out + sft81a[].out;
	add83_result[] = sft84a[].out + sft85a[].out;
	add87_result[] = sft88a[].out + sft89a[].out;
	add91_result[] = sft92a[].out + sft93a[].out;
	add95_result[] = sft96a[].out + sft97a[].out;
	cs1a[].cin = ( ((w7w[10..10] & cs1a[4].cout) # w7w[11..11]), (cs1a[3].cout & w7w[8..8]), ((w7w[6..6] & cs1a[2].cout) # w7w[7..7]), ((w7w[4..4] & cs1a[1].cout) # w7w[5..5]), ((w7w[2..2] & cs1a[0].cout) # w7w[3..3]), w7w[1..1]);
	cs1a[].sin = ( ((((((! w7w[11..11]) & w7w[10..10]) & cs1a[4].cout) # ((w7w[11..11] & w7w[10..10]) & (! cs1a[4].cout))) # ((w7w[11..11] & (! w7w[10..10])) & cs1a[4].cout)) # ((w7w[11..11] & (! w7w[10..10])) & (! cs1a[4].cout))), (cs1a[3].cout & w7w[8..8]), ((((((! w7w[7..7]) & w7w[6..6]) & cs1a[2].cout) # ((w7w[7..7] & w7w[6..6]) & (! cs1a[2].cout))) # ((w7w[7..7] & (! w7w[6..6])) & cs1a[2].cout)) # ((w7w[7..7] & (! w7w[6..6])) & (! cs1a[2].cout))), ((((((! w7w[5..5]) & w7w[4..4]) & cs1a[1].cout) # ((w7w[5..5] & w7w[4..4]) & (! cs1a[1].cout))) # ((w7w[5..5] & (! w7w[4..4])) & cs1a[1].cout)) # ((w7w[5..5] & (! w7w[4..4])) & (! cs1a[1].cout))), ((((((! w7w[3..3]) & w7w[2..2]) & cs1a[0].cout) # ((w7w[3..3] & w7w[2..2]) & (! cs1a[0].cout))) # ((w7w[3..3] & (! w7w[2..2])) & cs1a[0].cout)) # ((w7w[3..3] & (! w7w[2..2])) & (! cs1a[0].cout))), w7w[1..1]);
	cs2a[].cin = ( ((w7w[10..10] & cs2a[4].cout) # w7w[11..11]), (cs2a[3].cout $ w7w[8..8]), ((w7w[6..6] & cs2a[2].cout) # w7w[7..7]), ((w7w[4..4] & cs2a[1].cout) # w7w[5..5]), ((w7w[2..2] & cs2a[0].cout) # w7w[3..3]), w7w[1..1]);
	cs2a[].sin = ( ((((((! w7w[11..11]) & (! w7w[10..10])) & cs2a[4].cout) # (((! w7w[11..11]) & w7w[10..10]) & (! cs2a[4].cout))) # ((w7w[11..11] & w7w[10..10]) & (! cs2a[4].cout))) # ((w7w[11..11] & (! w7w[10..10])) & cs2a[4].cout)), (cs2a[3].cout $ w7w[8..8]), ((((((! w7w[7..7]) & (! w7w[6..6])) & cs2a[2].cout) # (((! w7w[7..7]) & w7w[6..6]) & (! cs2a[2].cout))) # ((w7w[7..7] & w7w[6..6]) & (! cs2a[2].cout))) # ((w7w[7..7] & (! w7w[6..6])) & cs2a[2].cout)), ((((((! w7w[5..5]) & (! w7w[4..4])) & cs2a[1].cout) # (((! w7w[5..5]) & w7w[4..4]) & (! cs2a[1].cout))) # ((w7w[5..5] & w7w[4..4]) & (! cs2a[1].cout))) # ((w7w[5..5] & (! w7w[4..4])) & cs2a[1].cout)), ((((((! w7w[3..3]) & (! w7w[2..2])) & cs2a[0].cout) # (((! w7w[3..3]) & w7w[2..2]) & (! cs2a[0].cout))) # ((w7w[3..3] & w7w[2..2]) & (! cs2a[0].cout))) # ((w7w[3..3] & (! w7w[2..2])) & cs2a[0].cout)), w7w[0..0]);
	dffe10.clk = clock;
	dffe10.clrn = (! aclr);
	dffe10.d = w129w[3..3];
	dffe10.ena = clken;
	dffe11.clk = clock;
	dffe11.clrn = (! aclr);
	dffe11.d = w238w[0..0];
	dffe11.ena = clken;
	dffe12.clk = clock;
	dffe12.clrn = (! aclr);
	dffe12.d = w188w[2..2];
	dffe12.ena = clken;
	dffe13.clk = clock;
	dffe13.clrn = (! aclr);
	dffe13.d = cs1a[2].sout;
	dffe13.ena = clken;
	dffe14.clk = clock;
	dffe14.clrn = (! aclr);
	dffe14.d = w129w[4..4];
	dffe14.ena = clken;
	dffe15.clk = clock;
	dffe15.clrn = (! aclr);
	dffe15.d = w238w[1..1];
	dffe15.ena = clken;
	dffe16.clk = clock;
	dffe16.clrn = (! aclr);
	dffe16.d = w188w[3..3];
	dffe16.ena = clken;
	dffe17.clk = clock;
	dffe17.clrn = (! aclr);
	dffe17.d = w129w[5..5];
	dffe17.ena = clken;
	dffe18.clk = clock;
	dffe18.clrn = (! aclr);
	dffe18.d = w296w[0..0];
	dffe18.ena = clken;
	dffe19.clk = clock;
	dffe19.clrn = (! aclr);
	dffe19.d = sft90a[0..0].out;
	dffe19.ena = clken;
	dffe20.clk = clock;
	dffe20.clrn = (! aclr);
	dffe20.d = w238w[2..2];
	dffe20.ena = clken;
	dffe21.clk = clock;
	dffe21.clrn = (! aclr);
	dffe21.d = w188w[4..4];
	dffe21.ena = clken;
	dffe22.clk = clock;
	dffe22.clrn = (! aclr);
	dffe22.d = w296w[1..1];
	dffe22.ena = clken;
	dffe23.clk = clock;
	dffe23.clrn = (! aclr);
	dffe23.d = sft90a[1..1].out;
	dffe23.ena = clken;
	dffe24.clk = clock;
	dffe24.clrn = (! aclr);
	dffe24.d = w238w[3..3];
	dffe24.ena = clken;
	dffe25.clk = clock;
	dffe25.clrn = (! aclr);
	dffe25.d = w188w[5..5];
	dffe25.ena = clken;
	dffe26.clk = clock;
	dffe26.clrn = (! aclr);
	dffe26.d = w354w[0..0];
	dffe26.ena = clken;
	dffe27.clk = clock;
	dffe27.clrn = (! aclr);
	dffe27.d = sft90a[2..2].out;
	dffe27.ena = clken;
	dffe28.clk = clock;
	dffe28.clrn = (! aclr);
	dffe28.d = w296w[2..2];
	dffe28.ena = clken;
	dffe29.clk = clock;
	dffe29.clrn = (! aclr);
	dffe29.d = w238w[4..4];
	dffe29.ena = clken;
	dffe3.clk = clock;
	dffe3.clrn = (! aclr);
	dffe3.d = w129w[0..0];
	dffe3.ena = clken;
	dffe30.clk = clock;
	dffe30.clrn = (! aclr);
	dffe30.d = w394w[0..0];
	dffe30.ena = clken;
	dffe31.clk = clock;
	dffe31.clrn = (! aclr);
	dffe31.d = sft90a[3..3].out;
	dffe31.ena = clken;
	dffe32.clk = clock;
	dffe32.clrn = (! aclr);
	dffe32.d = w354w[1..1];
	dffe32.ena = clken;
	dffe33.clk = clock;
	dffe33.clrn = (! aclr);
	dffe33.d = sft94a[0..0].out;
	dffe33.ena = clken;
	dffe34.clk = clock;
	dffe34.clrn = (! aclr);
	dffe34.d = w394w[1..1];
	dffe34.ena = clken;
	dffe35.clk = clock;
	dffe35.clrn = (! aclr);
	dffe35.d = sft90a[4..4].out;
	dffe35.ena = clken;
	dffe36.clk = clock;
	dffe36.clrn = (! aclr);
	dffe36.d = w354w[2..2];
	dffe36.ena = clken;
	dffe37.clk = clock;
	dffe37.clrn = (! aclr);
	dffe37.d = sft94a[1..1].out;
	dffe37.ena = clken;
	dffe38.clk = clock;
	dffe38.clrn = (! aclr);
	dffe38.d = sft90a[5..5].out;
	dffe38.ena = clken;
	dffe39.clk = clock;
	dffe39.clrn = (! aclr);
	dffe39.d = sft94a[2..2].out;
	dffe39.ena = clken;
	dffe4.clk = clock;
	dffe4.clrn = (! aclr);
	dffe4.d = cs1a[0].sout;
	dffe4.ena = clken;
	dffe40.clk = clock;
	dffe40.clrn = (! aclr);
	dffe40.d = w394w[2..2];
	dffe40.ena = clken;
	dffe41.clk = clock;
	dffe41.clrn = (! aclr);
	dffe41.d = sft98a[0..0].out;
	dffe41.ena = clken;
	dffe42.clk = clock;
	dffe42.clrn = (! aclr);
	dffe42.d = w394w[3..3];
	dffe42.ena = clken;
	dffe43.clk = clock;
	dffe43.clrn = (! aclr);
	dffe43.d = sft90a[6..6].out;
	dffe43.ena = clken;
	dffe44.clk = clock;
	dffe44.clrn = (! aclr);
	dffe44.d = sft94a[3..3].out;
	dffe44.ena = clken;
	dffe45.clk = clock;
	dffe45.clrn = (! aclr);
	dffe45.d = sft98a[1..1].out;
	dffe45.ena = clken;
	dffe46.clk = clock;
	dffe46.clrn = (! aclr);
	dffe46.d = w394w[4..4];
	dffe46.ena = clken;
	dffe47.clk = clock;
	dffe47.clrn = (! aclr);
	dffe47.d = sft90a[7..7].out;
	dffe47.ena = clken;
	dffe48.clk = clock;
	dffe48.clrn = (! aclr);
	dffe48.d = sft94a[4..4].out;
	dffe48.ena = clken;
	dffe49.clk = clock;
	dffe49.clrn = (! aclr);
	dffe49.d = sft98a[2..2].out;
	dffe49.ena = clken;
	dffe5.clk = clock;
	dffe5.clrn = (! aclr);
	dffe5.d = w129w[1..1];
	dffe5.ena = clken;
	dffe50.clk = clock;
	dffe50.clrn = (! aclr);
	dffe50.d = w394w[5..5];
	dffe50.ena = clken;
	dffe51.clk = clock;
	dffe51.clrn = (! aclr);
	dffe51.d = sft90a[8..8].out;
	dffe51.ena = clken;
	dffe52.clk = clock;
	dffe52.clrn = (! aclr);
	dffe52.d = w354w[6..6];
	dffe52.ena = clken;
	dffe53.clk = clock;
	dffe53.clrn = (! aclr);
	dffe53.d = sft94a[5..5].out;
	dffe53.ena = clken;
	dffe54.clk = clock;
	dffe54.clrn = (! aclr);
	dffe54.d = w394w[6..6];
	dffe54.ena = clken;
	dffe55.clk = clock;
	dffe55.clrn = (! aclr);
	dffe55.d = sft90a[9..9].out;
	dffe55.ena = clken;
	dffe56.clk = clock;
	dffe56.clrn = (! aclr);
	dffe56.d = w354w[7..7];
	dffe56.ena = clken;
	dffe57.clk = clock;
	dffe57.clrn = (! aclr);
	dffe57.d = sft94a[6..6].out;
	dffe57.ena = clken;
	dffe58.clk = clock;
	dffe58.clrn = (! aclr);
	dffe58.d = w394w[7..7];
	dffe58.ena = clken;
	dffe59.clk = clock;
	dffe59.clrn = (! aclr);
	dffe59.d = sft90a[10..10].out;
	dffe59.ena = clken;
	dffe6.clk = clock;
	dffe6.clrn = (! aclr);
	dffe6.d = w188w[0..0];
	dffe6.ena = clken;
	dffe60.clk = clock;
	dffe60.clrn = (! aclr);
	dffe60.d = w354w[8..8];
	dffe60.ena = clken;
	dffe61.clk = clock;
	dffe61.clrn = (! aclr);
	dffe61.d = w296w[10..10];
	dffe61.ena = clken;
	dffe62.clk = clock;
	dffe62.clrn = (! aclr);
	dffe62.d = w394w[8..8];
	dffe62.ena = clken;
	dffe63.clk = clock;
	dffe63.clrn = (! aclr);
	dffe63.d = w354w[9..9];
	dffe63.ena = clken;
	dffe64.clk = clock;
	dffe64.clrn = (! aclr);
	dffe64.d = (! w296w[11..11]);
	dffe64.ena = clken;
	dffe65.clk = clock;
	dffe65.clrn = (! aclr);
	dffe65.d = sft90a[11..11].out;
	dffe65.ena = clken;
	dffe66.clk = clock;
	dffe66.clrn = (! aclr);
	dffe66.d = w394w[9..9];
	dffe66.ena = clken;
	dffe67.clk = clock;
	dffe67.clrn = (! aclr);
	dffe67.d = w354w[10..10];
	dffe67.ena = clken;
	dffe68.clk = clock;
	dffe68.clrn = (! aclr);
	dffe68.d = B"1";
	dffe68.ena = clken;
	dffe69.clk = clock;
	dffe69.clrn = (! aclr);
	dffe69.d = w394w[10..10];
	dffe69.ena = clken;
	dffe7.clk = clock;
	dffe7.clrn = (! aclr);
	dffe7.d = w129w[2..2];
	dffe7.ena = clken;
	dffe70.clk = clock;
	dffe70.clrn = (! aclr);
	dffe70.d = w354w[11..11];
	dffe70.ena = clken;
	dffe71.clk = clock;
	dffe71.clrn = (! aclr);
	dffe71.d = B"1";
	dffe71.ena = clken;
	dffe72.clk = clock;
	dffe72.clrn = (! aclr);
	dffe72.d = B"1";
	dffe72.ena = clken;
	dffe73.clk = clock;
	dffe73.clrn = (! aclr);
	dffe73.d = B"1";
	dffe73.ena = clken;
	dffe74.clk = clock;
	dffe74.clrn = (! aclr);
	dffe74.d = B"1";
	dffe74.ena = clken;
	dffe8.clk = clock;
	dffe8.clrn = (! aclr);
	dffe8.d = cs1a[1].sout;
	dffe8.ena = clken;
	dffe9.clk = clock;
	dffe9.clrn = (! aclr);
	dffe9.d = w188w[1..1];
	dffe9.ena = clken;
	sft76a[].in = ( dffe74.q, ( dffe73.q, ( sft82a[18..18].out, ( sft82a[17..17].out, ( sft82a[16..16].out, ( sft82a[15..15].out, ( sft82a[14..14].out, ( sft82a[13..13].out, ( sft82a[12..12].out, ( sft82a[11..11].out, ( sft82a[10..10].out, ( sft82a[9..9].out, ( sft82a[8..8].out, ( sft82a[7..7].out, ( sft82a[6..6].out, ( sft82a[5..5].out, ( sft82a[4..4].out, ( sft82a[3..3].out, ( sft82a[2..2].out, ( dffe9.q, ( dffe6.q, ( dffe5.q, dffe3.q))))))))))))))))))))));
	sft77a[].in = ( w456w, ( sft82a[19..19].out, ( sft86a[16..16].out, ( sft86a[15..15].out, ( sft86a[14..14].out, ( sft86a[13..13].out, ( sft86a[12..12].out, ( sft86a[11..11].out, ( sft86a[10..10].out, ( sft86a[9..9].out, ( sft86a[8..8].out, ( sft86a[7..7].out, ( sft86a[6..6].out, ( sft86a[5..5].out, ( sft86a[4..4].out, ( sft86a[3..3].out, ( sft86a[2..2].out, ( sft86a[1..1].out, ( sft86a[0..0].out, ( sft82a[1..1].out, ( sft82a[0..0].out, ( w456w, dffe4.q))))))))))))))))))))));
	sft78a[].in = add75_result[];
	sft80a[].in = ( w456w, ( dffe72.q, ( dffe69.q, ( dffe66.q, ( dffe62.q, ( dffe58.q, ( dffe54.q, ( dffe50.q, ( dffe46.q, ( dffe42.q, ( dffe38.q, ( dffe34.q, ( dffe30.q, ( dffe26.q, ( dffe22.q, ( dffe18.q, ( dffe15.q, ( dffe11.q, ( dffe10.q, dffe7.q)))))))))))))))))));
	sft81a[].in = ( w456w, ( w456w, ( dffe70.q, ( dffe67.q, ( dffe63.q, ( dffe59.q, ( dffe55.q, ( dffe51.q, ( dffe47.q, ( dffe43.q, ( dffe39.q, ( dffe35.q, ( dffe31.q, ( dffe27.q, ( dffe23.q, ( dffe19.q, ( dffe16.q, ( dffe12.q, ( w456w, dffe8.q)))))))))))))))))));
	sft82a[].in = add79_result[];
	sft84a[].in = ( w456w, ( dffe71.q, ( dffe68.q, ( dffe64.q, ( dffe60.q, ( dffe56.q, ( dffe52.q, ( dffe48.q, ( dffe44.q, ( dffe40.q, ( dffe36.q, ( dffe32.q, ( dffe28.q, ( dffe24.q, ( dffe20.q, ( dffe17.q, dffe13.q))))))))))))))));
	sft85a[].in = ( w456w, ( w456w, ( w456w, ( dffe65.q, ( dffe61.q, ( dffe57.q, ( dffe53.q, ( dffe49.q, ( dffe45.q, ( dffe41.q, ( dffe37.q, ( dffe33.q, ( dffe29.q, ( dffe25.q, ( dffe21.q, ( w456w, dffe14.q))))))))))))))));
	sft86a[].in = add83_result[];
	sft88a[].in = ( w456w, ( w427w, ( w296w[9..9], ( w296w[8..8], ( w354w[5..5], ( w354w[4..4], ( w354w[3..3], ( w296w[4..4], ( w296w[3..3], ( w188w[6..6], ( w129w[7..6])))))))))));
	sft89a[].in = ( w456w, ( w456w, ( (! w238w[11..11]), ( w238w[10..10], ( w296w[7..7], ( w296w[6..6], ( w296w[5..5], ( w238w[6..6], ( w238w[5..5], ( w129w[8..8], ( w456w, cs1a[3].sout)))))))))));
	sft90a[].in = add87_result[];
	sft92a[].in = ( w456w, ( w427w, ( w238w[9..9], ( w238w[8..8], ( w238w[7..7], ( w188w[8..7]))))));
	sft93a[].in = ( w456w, ( w456w, ( (! w188w[11..11]), ( w188w[10..10], ( w188w[9..9], ( w129w[10..9]))))));
	sft94a[].in = add91_result[];
	sft96a[].in = ( w456w, ( w427w, w427w));
	sft97a[].in = ( w456w, ( w456w, (! w129w[11..11])));
	sft98a[].in = add95_result[];
	aclr = GND;
	dataa_node[] = ( dataa[9..0]);
	datab_node[] = ( datab[9..0]);
	final_result_node[] = ( w693w[19..0]);
	result[] = ( final_result_node[19..0]);
	w129w[] = (! ((! (((! ( B"0", dataa_node[], B"0")) & cs1a[0].sout) & (! cs2a[0].sout))) & (! ((((! ( B"0", B"0", dataa_node[])) & cs1a[0].sout) & cs2a[0].sout) # ((( B"0", B"0", dataa_node[]) & (! cs1a[0].sout)) & cs2a[0].sout)))));
	w188w[] = (! ((! (((! ( B"0", dataa_node[], B"0")) & cs1a[1].sout) & (! cs2a[1].sout))) & (! ((((! ( B"0", B"0", dataa_node[])) & cs1a[1].sout) & cs2a[1].sout) # ((( B"0", B"0", dataa_node[]) & (! cs1a[1].sout)) & cs2a[1].sout)))));
	w238w[] = (! ((! (((! ( B"0", dataa_node[], B"0")) & cs1a[2].sout) & (! cs2a[2].sout))) & (! ((((! ( B"0", B"0", dataa_node[])) & cs1a[2].sout) & cs2a[2].sout) # ((( B"0", B"0", dataa_node[]) & (! cs1a[2].sout)) & cs2a[2].sout)))));
	w296w[] = (! ((! (((! ( B"0", dataa_node[], B"0")) & cs1a[3].sout) & (! cs2a[3].sout))) & (! ((((! ( B"0", B"0", dataa_node[])) & cs1a[3].sout) & cs2a[3].sout) # ((( B"0", B"0", dataa_node[]) & (! cs1a[3].sout)) & cs2a[3].sout)))));
	w354w[] = ((cs1a[4].sout & ( B"0", dataa_node[], B"0")) # (cs2a[4].sout & ( B"0", B"0", dataa_node[])));
	w394w[] = (w7w[9..9] & ( B"0", dataa_node[]));
	w427w = B"1";
	w456w = B"0";
	w693w[] = ( sft78a[22..21].out, sft78a[20..19].out, sft78a[18..17].out, sft78a[16..15].out, sft78a[14..13].out, sft78a[12..11].out, sft78a[10..9].out, sft78a[8..7].out, sft78a[6..5].out, sft78a[4..3].out, sft78a[2..1].out, sft78a[0..0].out);
	w7w[] = ( B"00", datab_node[]);
END;
--VALID FILE
